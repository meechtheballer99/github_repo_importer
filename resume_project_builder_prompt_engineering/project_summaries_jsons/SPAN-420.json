[
  {
    "repo": "SPAN-420",
    "folder": "CSV dictionaries",
    "code_files": [
      "CSV dictionaries\\DictionaryApp_PythonVersion_meech.py"
    ],
    "snippets": [
      {
        "file": "SPAN-420\\CSV dictionaries\\DictionaryApp_PythonVersion_meech.py",
        "snippet": "import sys  # import the sys module\n\n# set a default filename and max results\nfilename = \"es-en.csv\"\nmax_results = 0\n\n# welcome message\nprint(\"Welcome to the line-by-line search program [python version] (built to search span-english dictionary - for SPAN-420 UM-DEARBORN)\")\nprint(\"By Demetrius Johnson (Meech)\")\n\n# prompt the user for a filename and max results\nfilename = input(\"Input a dictionary - or any txt or csv - filename to do line-by-line word search\\n\"\n                 \"(make sure the file is in the same directory as where you launched this program, or specify full path including filename):\\nEnter file name: \")\nmax_results = int(input(\"Enter the MAX number of results you want displayed (lines in the file that contain your search word): \"))\n\ntry:\n    # try to open the file\n    with open(filename, 'r') as dictionary:\n        word = \"\"  # initialize the word variable\n        line = \"\"  # initialize the line variable"
      }
    ]
  },
  {
    "repo": "SPAN-420",
    "folder": "Dictionary txt files - 100s of languages\\Dictionaries-master\\Dictionaries-master",
    "code_files": [
      "Dictionary txt files - 100s of languages\\Dictionaries-master\\Dictionaries-master\\Dictionaries.py"
    ],
    "snippets": [
      {
        "file": "SPAN-420\\Dictionary txt files - 100s of languages\\Dictionaries-master\\Dictionaries-master\\Dictionaries.py",
        "snippet": "import sublime, sublime_plugin\n\nimport fnmatch, os.path\n\ndef find_resources(pattern):\n\tresources = []\n\tif hasattr(sublime, 'find_resources'):\n\t\tresources = sublime.find_resources(pattern)\n\telse:\n\t\tfor root, dir_names, file_names in os.walk(sublime.packages_path()):\n\t\t\tif \".git\" in root:\n\t\t\t\tcontinue\n\t\t\tfor file_name in file_names:\n\t\t\t\trel_path = os.path.relpath(os.path.join(root, file_name), sublime.packages_path())\n\t\t\t\tif fnmatch.fnmatch(rel_path.lower(), \"*\" + pattern.lower()):\n\t\t\t\t\tresources += [os.path.join('Packages', rel_path).replace(os.sep, \"/\")]\n\treturn resources\n\n\nclass DicSetViewLanguageCommand(sublime_plugin.TextCommand):"
      }
    ]
  },
  {
    "repo": "SPAN-420",
    "folder": "DictionaryApp_meech",
    "code_files": [
      "DictionaryApp_meech\\DictionaryApp_meech.cpp",
      "DictionaryApp_meech\\DictionaryApp_PythonVersion_meech.py",
      "DictionaryApp_meech\\StringSearchApp_official_meech.cpp"
    ],
    "snippets": [
      {
        "file": "SPAN-420\\DictionaryApp_meech\\DictionaryApp_meech.cpp",
        "snippet": "// DictionaryApp_meech.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//Author: Demetrius Johnson\n//Purpose: line-by-line word search in span-english dictionary (txt/csv files) - for SPAN-420 UM-DEARBORN\n//Date created: 3/29/23\n//Date modified: 3/29/23\n\n//note: I will make ints unsigned whenever possible so they can have a max positive value.\n#include <iostream>\n#include <string>\n#include <fstream>\n#include <cstdio>\nusing namespace std;\n\n\nint main()\n{\n\tfstream dictionary;\n\tstring filename = \"es-en.csv\";\n\tunsigned int max_results = 0;\n\tcout << \"Welcome to the line-by-line search program (built to search span-english dictionary - for SPAN-420 UM-DEARBORN)\\n\";"
      },
      {
        "file": "SPAN-420\\DictionaryApp_meech\\DictionaryApp_PythonVersion_meech.py",
        "snippet": "import sys  # import the sys module\n\n# set a default filename and max results\nfilename = \"es-en.csv\"\nmax_results = 0\n\n# welcome message\nprint(\"Welcome to the line-by-line search program [python version] (built to search span-english dictionary - for SPAN-420 UM-DEARBORN)\")\nprint(\"By Demetrius Johnson (Meech)\")\n\n# prompt the user for a filename and max results\nfilename = input(\"Input a dictionary - or any txt or csv - filename to do line-by-line word search\\n\"\n                 \"(make sure the file is in the same directory as where you launched this program, or specify full path including filename):\\nEnter file name: \")\nmax_results = int(input(\"Enter the MAX number of results you want displayed (lines in the file that contain your search word): \"))\n\ntry:\n    # try to open the file\n    with open(filename, 'r') as dictionary:\n        word = \"\"  # initialize the word variable\n        line = \"\"  # initialize the line variable"
      },
      {
        "file": "SPAN-420\\DictionaryApp_meech\\StringSearchApp_official_meech.cpp",
        "snippet": "#include <iostream>\n#include <string>\n#include <fstream>\n#include <cwchar>\n#include <limits>\n#include <locale>\n#ifdef _WIN32\n#include <io.h>\n#include <fcntl.h>\n#include<vector>\n#endif\nusing namespace std;\n\nint main() {\n\n    setlocale(LC_ALL, \"\"); // Set the locale to the user's default locale\n\n#ifdef _WIN32\n    // Configure the console for Unicode encoding on Windows\n    _setmode(_fileno(stdout), _O_U16TEXT);"
      }
    ]
  }
]