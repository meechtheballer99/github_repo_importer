[
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 1",
    "code_files": [
      "Labs\\Lab 1\\Lab1.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 1\\Lab1.cpp",
        "snippet": "// lab1.cpp\n#include <iostream>\nusing namespace std;\n\nint main ()\n{\n    cout << \"Hello Everyone !\" << endl;\n  \n    cout << \"This is Lab 1 of CIS 200 Winter 2021.\" << endl;\n    \n  return 0;\n}"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 10\\Bakcup TXT",
    "code_files": [
      "Labs\\Lab 10\\Bakcup TXT\\CIS-200-LAB_10_Q1.cpp",
      "Labs\\Lab 10\\Bakcup TXT\\Pet.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 10\\Bakcup TXT\\CIS-200-LAB_10_Q1.cpp",
        "snippet": "// CIS-200-LAB 10 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 April 2021\n//Last Modification Date: 04-12-2021\n//Purpose: Demonstrate the use of Polymorphism and Dynamic Binding: one of the corner stones of object-oriented programming in C++\n\n*/\n\n/*\nQuestion 1:\n\nWrite a program that uses inheritance and polymorphism. Make a Pet class and let it have a kind of food (string). \nYou have a feed() function and a speak() function. Both functions should be virtual functions.\nChild classes will have different things depending on what it is. \nInside the four child classes, you should override the feed( ) and speak( ) functions to generate the specified output."
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 10\\Bakcup TXT\\Pet.cpp",
        "snippet": "/*\n//Author: Demetrius E Johnson\n//Date: 12 April 2021\n//Last Modification Date: 04-14-2021\n//Purpose: Demonstrate the use of Polymorphism and Dynamic Binding: one of the corner stones of object-oriented programming in C++\n\n*/\n\n#include <string>\n#include <iostream>\nusing namespace std;\n\nclass Pet\n{\nprotected:\n    string Kind_of_Food = \"Eats generic food\";\n    string Kind_of_Sound = \"Makes an animal noise\";\npublic:\n\n    Pet() { //default constructor"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 10\\CIS-200-LAB_10-DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 10\\CIS-200-LAB_10-DemetriusJohnson\\CIS-200-LAB_10_Q1.cpp",
      "Labs\\Lab 10\\CIS-200-LAB_10-DemetriusJohnson\\Pet.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 10\\CIS-200-LAB_10-DemetriusJohnson\\CIS-200-LAB_10_Q1.cpp",
        "snippet": "// CIS-200-LAB 10 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 April 2021\n//Last Modification Date: 04-12-2021\n//Purpose: Demonstrate the use of Polymorphism and Dynamic Binding: one of the corner stones of object-oriented programming in C++\n\n*/\n\n/*\nQuestion 1:\n\nWrite a program that uses inheritance and polymorphism. Make a Pet class and let it have a kind of food (string). \nYou have a feed() function and a speak() function. Both functions should be virtual functions.\nChild classes will have different things depending on what it is. \nInside the four child classes, you should override the feed( ) and speak( ) functions to generate the specified output."
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 10\\CIS-200-LAB_10-DemetriusJohnson\\Pet.cpp",
        "snippet": "/*\n//Author: Demetrius E Johnson\n//Date: 12 April 2021\n//Last Modification Date: 04-14-2021\n//Purpose: Demonstrate the use of Polymorphism and Dynamic Binding: one of the corner stones of object-oriented programming in C++\n\n*/\n\n#include <string>\n#include <iostream>\nusing namespace std;\n\nclass Pet\n{\nprotected:\n    string Kind_of_Food = \"Eats generic food\";\n    string Kind_of_Sound = \"Makes an animal noise\";\npublic:\n\n    Pet() { //default constructor"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 11\\BAKCUP_TXT",
    "code_files": [
      "Labs\\Lab 11\\BAKCUP_TXT\\BinarySearchTree.cpp",
      "Labs\\Lab 11\\BAKCUP_TXT\\CIS-200-LAB_11-DemetriusJohnson.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 11\\BAKCUP_TXT\\BinarySearchTree.cpp",
        "snippet": "/*\n//Author: Demetrius E Johnson\n//Date: 15 April 2021\n//Last Modification Date: 04-19-2021\n//Purpose: Use a tree struct node to demonstrate the structure of a Binary Search Tree data type\n*/\n\n//#include <vector>\n#include<iostream>\n//TREE NODE STRUCT:\ntemplate<class ItemType>\nstruct TreeNode\n{\n\t\n\tItemType info;  //hold the actual data information for the current node\n\tTreeNode<ItemType>* left; //left child pointer\n\tTreeNode<ItemType>* right; //right child pointer\n\t//bool markedForDeletion = false; //use this to assist with the destructor function\n};"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 11\\BAKCUP_TXT\\CIS-200-LAB_11-DemetriusJohnson.cpp",
        "snippet": "// CIS-200-LAB_11 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 15 April 2021\n//Last Modification Date: 04-19-2021\n//Purpose: Use a tree struct node to demonstrate the structure of a Binary Search Tree data type\n*/\n\n/*\nQuestion 1:\n\nQuestion 1  Tree\nIn this assignment, perform the following four coding tasks:\n(1)\tCreate a struct TreeNode\n(2)\tUse this TreeNode to construct a binary search tree based on the following input queue:\n                  F,  A,  B,  M,  C, Q\n\n(3)\tUse Inorder Traversal to print out the content of this tree"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 11\\CIS-200-LAB_11-DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 11\\CIS-200-LAB_11-DemetriusJohnson\\BinarySearchTree.cpp",
      "Labs\\Lab 11\\CIS-200-LAB_11-DemetriusJohnson\\CIS-200-LAB_11-DemetriusJohnson.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 11\\CIS-200-LAB_11-DemetriusJohnson\\BinarySearchTree.cpp",
        "snippet": "/*\n//Author: Demetrius E Johnson\n//Date: 15 April 2021\n//Last Modification Date: 04-19-2021\n//Purpose: Use a tree struct node to demonstrate the structure of a Binary Search Tree data type\n*/\n\n//#include <vector>\n#include<iostream>\n//TREE NODE STRUCT:\ntemplate<class ItemType>\nstruct TreeNode\n{\n\t\n\tItemType info;  //hold the actual data information for the current node\n\tTreeNode<ItemType>* left; //left child pointer\n\tTreeNode<ItemType>* right; //right child pointer\n\t//bool markedForDeletion = false; //use this to assist with the destructor function\n};"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 11\\CIS-200-LAB_11-DemetriusJohnson\\CIS-200-LAB_11-DemetriusJohnson.cpp",
        "snippet": "// CIS-200-LAB_11 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 15 April 2021\n//Last Modification Date: 04-19-2021\n//Purpose: Use a tree struct node to demonstrate the structure of a Binary Search Tree data type\n*/\n\n/*\nQuestion 1:\n\nQuestion 1  Tree\nIn this assignment, perform the following four coding tasks:\n(1)\tCreate a struct TreeNode\n(2)\tUse this TreeNode to construct a binary search tree based on the following input queue:\n                  F,  A,  B,  M,  C, Q\n\n(3)\tUse Inorder Traversal to print out the content of this tree"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q1.cpp",
      "Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q2.cpp",
      "Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q3.cpp",
      "Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q4.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q1.cpp",
        "snippet": "// CIS 200 - LAB 2 - WINTER 2021 - DEMETRIUS JOHNSON.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 4 FEB 2021\n//Last Modification Date: 2-5-2021\n//Purpose: a program to print an upside-down triangle composed of a symbol provided by user input\n\n\n*/\n\n/* \nQuestion 1 (2.5 points)\n//Write a program to print an upside-down triangle composed of a symbol. \n//The number of lines in the triangle and the symbol should be entered as input from the keyboard. \n//For example, if the input values are 4 and $, the output is as follows:\n\n                      $$$$$$$\n                       $   $"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q2.cpp",
        "snippet": "// CIS 200 - LAB 2 - WINTER 2021 - DEMETRIUS JOHNSON.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 4 FEB 2021\n//Last Modification Date: 2-5-2021\n//Purpose: take a positive integer from users via cin and to print out the value of this number in its octal representation (8-based numbering system)\n\n\n*/\n\n/*\n\nQuestion 2 (2.5 points)\n\n//Write a program to take a positive integer from users via cin and to print out the value of this number in its octal representation (8-based numbering system). \n//For instance, if you input 8, the output should be 10.\n\n//You should test your program with the following inputs:"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q3.cpp",
        "snippet": "// CIS 200 - LAB 2 - WINTER 2021 - DEMETRIUS JOHNSON.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 4 FEB 2021\n//Last Modification Date:\n//Purpose: use the concept of a macro --> preprocessor function/operation replacement directive\n\n\n*/\n\n/*\n\nQuestion 3 (2.5 points)\n\nDefine a macro, getmin(a, b), by using #define \ngetmin(a, b) returns a if a < b; otherwise return b.\n\nWrite a simple main( ) below:"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 2\\CIS-200-LAB 2 -DemetriusJohnson\\L2Q4.cpp",
        "snippet": "// CIS 200 - LAB 2 - WINTER 2021 - DEMETRIUS JOHNSON.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 4 FEB 2021\n//Last Modification Date: \n//Purpose: Show the use of an inline c++ style function\n\n\n\nNOTES:\n\nA macro is a fragment of code which has been given a name. Whenever the name is used, it is replaced by the contents of the macro. (C style)\n\nInline function is a function that is expanded in-line when it is called. \nWhen the inline function is called, the whole code of the inline function gets inserted \nor substituted at the point of inline function call.  (C++ style)\n\n*Note, a macro is a the same as an inline function in that the contents are replaced by the compiler at compile time (pre-processor directive)"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q1_LAB3.cpp",
      "Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q2_LAB3.cpp",
      "Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q3_LAB3.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q1_LAB3.cpp",
        "snippet": "// CIS-200-LAB 3 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 7 FEB 2021\n//Last Modification Date: 2-7-2021\n//Purpose: \n\n\n*/\n\n/*\nQuestion 1 (3.0 points)\n\nSuppose you work for a boss who is stingy about memory use and\nask you to use only one unsigned char variable, x, for the representation of the binary status (ON or OFF) of 8 locations. \n(See a figure below.)  The reason for this is that your boss wants to use your code in handling with multiple-million user information.\nIn addition, your boss requires you to write a code for complete a number of steps as follows:"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q2_LAB3.cpp",
        "snippet": "// CIS-200-LAB 3 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 7 FEB 2021\n//Last Modification Date: 2-7-2021\n//Purpose:\n\n\n*/\n\n/*\n\nQuestion 2 (3.0 points)\nWrite a program to determine whether the character entered is a capital letter, a small case letter, a digit or a special symbol.\nThe following table shows the range of ASCII values for various characters.\nCharacters\tASCII Values\nA  Z\t65  90\na  z\t97  122"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 3\\CIS-200-LAB 3 -DemetriusJohnson\\Q3_LAB3.cpp",
        "snippet": "// CIS-200-LAB 3 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 7 FEB 2021\n//Last Modification Date: 2-7-2021\n//Purpose:\n\n\n*/\n\n/*\nQuestion 3 (4.0 points)\n\nGiven that Sale[NUM_ROW][NUM_COLUMN] is a two dimensional array of float-pofloat type and the two constants are defined as follows:\n\n#define NUM_ROW  4\n#define NUM_COLUMN 4"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q1_LAB4.cpp",
      "Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q2_LAB4.cpp",
      "Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q3_LAB4.cpp",
      "Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q4_LAB4.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q1_LAB4.cpp",
        "snippet": "// CIS-200-LAB 4 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 FEB 2021\n//Last Modification Date: 2-12-2021\n//Purpose: Test the Assertion function\n\n\n*/\n\n/*\nQuestion 1.\n\nImplement a function with the following skeleton:\n\nfloat getSquareRoot( float x)\n{\n     // add an assert( ) function call here to make sure that x is a positive number"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q2_LAB4.cpp",
        "snippet": "// CIS-200-LAB 4 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 FEB 2021\n//Last Modification Date: 2-12-2021\n//Purpose:\n\n\n*/\n\n/*\nQuestion 2.\n\nImplement the following main( ):\n\nint main( )\n{\n       int a=1, b=2, c=3;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q3_LAB4.cpp",
        "snippet": "// CIS-200-LAB 4 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 FEB 2021\n//Last Modification Date: 2-12-2021\n//Purpose: practice using break points\n\n\n*/\n\n/*\nQuestion 3.\n\nImplement the following factorial( ) and main( ):\n\nInt factorial( int n)\n{\n          If(n == 1)"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 4\\CIS-200-LAB 4 -DemetriusJohnson\\Q4_LAB4.cpp",
        "snippet": "// CIS-200-LAB 4 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 12 FEB 2021\n//Last Modification Date: 2-12-2021\n//Purpose: Cryptography program that takes advantage of arrays and char numbers through ASCII standard\n\n\n*/\n\n/*\nQuestion 4\n\nIn cryptography, Caesar cipher is one of the simplest encryption techniques. \nThe key idea of this method is to replace each plaintext letter with one fixed number of places down the alphabet. \nBelow is an example with a shift of two:\n\nPlain:     ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 5\\CIS-200-LAB 5 -DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 5\\CIS-200-LAB 5 -DemetriusJohnson\\Q1_LAB5.cpp",
      "Labs\\Lab 5\\CIS-200-LAB 5 -DemetriusJohnson\\Q2_LAB5.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 5\\CIS-200-LAB 5 -DemetriusJohnson\\Q1_LAB5.cpp",
        "snippet": "// CIS-200-LAB 5 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 19 FEB 2021\n//Last Modification Date: 2-19-2021\n//Purpose:  create a data type and output its data member contents\n\n\n*/\n\n/*\nQuestion 1: User-defined Data Type\n\nDefine your own data type, REAL44, which means a 4-by-4 float array.\n\nThen, in your main( ), create two instances of this data type:\n\nREAL44 a, b;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 5\\CIS-200-LAB 5 -DemetriusJohnson\\Q2_LAB5.cpp",
        "snippet": "// CIS-200-LAB 5 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 19 FEB 2021\n//Last Modification Date: 2-19-2021\n//Purpose: demonstrate the use of class constructors and operator overloading\n\n\n*/\n\n/*\nQuestion 2: Class Constructors and Operator Overloading\n\n\nCreate a class called Student, which contains the following data members:\n\nprivate:\n        int x;"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 6",
    "code_files": [
      "Labs\\Lab 6\\Q1_LAB6.cpp",
      "Labs\\Lab 6\\Q2_LAB6.cpp",
      "Labs\\Lab 6\\Q3_LAB6.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 6\\Q1_LAB6.cpp",
        "snippet": "// CIS-200-LAB_6-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 MONTH 2021\n//Last Modification Date: 03-08-2021\n//Purpose: test the use of a recursive function\n\n\n*/\n\n/*\nQuestion 1:\n\nWrite a recursive function defined by the following recursive formula:\n\nfoo (Y, X) =\n    Y                                                            if  X = 1\n    1                                                             if  X = Y"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 6\\Q2_LAB6.cpp",
        "snippet": "// CIS-200-LAB_6-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 MONTH 2021\n//Last Modification Date: 03-08-2021\n//Purpose: implement a recursive function that conducts a binary search\n\n\n*/\n\n/*\nQuestion 2:\n\nImplement a recursive function that conducts a binary search with the following interface:\n\nbool BinarySearch (int info[ ],  int x,  int fromLoc, int toLoc, int &step);\n//  info[fromLoc, toLoc] stores an ordered list\n// step:  the number of search step of this binary search"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 6\\Q3_LAB6.cpp",
        "snippet": "// CIS-200-LAB_6-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 MONTH 2021\n//Last Modification Date: 03-08-2021\n//Purpose: Show use of a Linear search\n\n\n*/\n\n/*\nQuestion 3:\n\nImplement a function that conducts a linear search with the following interface:\n\nbool LinearSearch (int info[ ],  int x,  int fromLoc, int toLoc, int &step);\n//  info[fromLoc, toLoc] stores an ordered list\n// step:  the number of search step of this linear search"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q1_LAB7.cpp",
      "Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q2_LAB7.cpp",
      "Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q3_LAB7.cpp",
      "Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q4_LAB7.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q1_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: use a template function that can swap many data types\n\n\n*/\n\n/*\nQuestion 1:\n\n//Design and implement a template function, called swapt(T *p1, T *p2), \n//which takes two parameters with the same generic data type. \n//The function swaps the values of these two parameters."
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q2_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: implement a template struct\n\n\n*/\n\n/*\nQuestion 2:\n\nDesign and implement a template struct, called Employeet, \n//which contains two data members (id and salary). \n//The data types of id and salary are T1 and T2, respectively.\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q3_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: practice the use of dynamic allocation using a multi-dimensional array of 3 Dimensions\n\n\n*/\n\n/*\nQuestion 3:\n\nDynamic memory allocation is an efficient and flexible way for software development. Design and implement a function, bar( ... ), \nwhich dynamically allocates a three-dimensional arrays. This function has four parameters: \n1) a parameter for transmitting the array between main( ) and bar( ); \n2) an integer parameter for specifying the length of the first index of the array; \n3) an integer parameter for specifying the length of the second index of the array;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\CIS-200-LAB_7-DemetriusJohnson\\Q4_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 19 MONTH 2021\n//Last Modification Date: 03-21-2021\n//Purpose: demontrate the use of try-catch-throw exception handling blcoks\n\n\n*/\n\n/*\nQuestion 4:\n\n\n\n*/"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 7\\TXT BACKUPS",
    "code_files": [
      "Labs\\Lab 7\\TXT BACKUPS\\Q1_LAB7.cpp",
      "Labs\\Lab 7\\TXT BACKUPS\\Q2_LAB7.cpp",
      "Labs\\Lab 7\\TXT BACKUPS\\Q3_LAB7.cpp",
      "Labs\\Lab 7\\TXT BACKUPS\\Q4_LAB7.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\TXT BACKUPS\\Q1_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: use a template function that can swap many data types\n\n\n*/\n\n/*\nQuestion 1:\n\n//Design and implement a template function, called swapt(T *p1, T *p2), \n//which takes two parameters with the same generic data type. \n//The function swaps the values of these two parameters."
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\TXT BACKUPS\\Q2_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: implement a template struct\n\n\n*/\n\n/*\nQuestion 2:\n\nDesign and implement a template struct, called Employeet, \n//which contains two data members (id and salary). \n//The data types of id and salary are T1 and T2, respectively.\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\TXT BACKUPS\\Q3_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 16 MAR 2021\n//Last Modification Date: 03-16-2021\n//Purpose: practice the use of dynamic allocation using a multi-dimensional array of 3 Dimensions\n\n\n*/\n\n/*\nQuestion 3:\n\nDynamic memory allocation is an efficient and flexible way for software development. Design and implement a function, bar( ... ), \nwhich dynamically allocates a three-dimensional arrays. This function has four parameters: \n1) a parameter for transmitting the array between main( ) and bar( ); \n2) an integer parameter for specifying the length of the first index of the array; \n3) an integer parameter for specifying the length of the second index of the array;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 7\\TXT BACKUPS\\Q4_LAB7.cpp",
        "snippet": "// CIS-200-LAB 7 -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 19 MONTH 2021\n//Last Modification Date: 03-21-2021\n//Purpose: demontrate the use of try-catch-throw exception handling blcoks\n\n\n*/\n\n/*\nQuestion 4:\n\n\n\n*/"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 8\\BackupTXT",
    "code_files": [
      "Labs\\Lab 8\\BackupTXT\\Q1.cpp",
      "Labs\\Lab 8\\BackupTXT\\Q2.cpp",
      "Labs\\Lab 8\\BackupTXT\\Q3.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\BackupTXT\\Q1.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 26, 2021\n//Last Modification Date: April 26, 2021\n//Purpose: This program demonstrates the use of a linked list using a struct and some basic functions\n\n\n*/\n\n/*\nQuestion 1:\n\n//Write a function called listsize that takes a pointer to the start of a linked list and returns the number of elements in the list,  \n//and another function called listsum that also takes a pointer to the start of a linked list and returns the sum of the values of all elements in the list. \n//In your main routine, you need to print out the results of these two functions on computer screen.\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\BackupTXT\\Q2.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 26, 2021\n//Last Modification Date: April 26, 2021\n//Purpose: This program demonstrates the use of a linked list using a struct and some basic functions\n\n\n*/\n\n/*\nQuestion 2:\n\n//Write a function called listsize that takes a pocharer to the start of a linked list and returns the number of elements in the list,  \n//and another function called listsum that also takes a pocharer to the start of a linked list and returns the sum of the values of all elements in the list. \n//In your main routine, you need to prchar out the results of these two functions on computer screen.\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\BackupTXT\\Q3.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 27, 2021\n//Last Modification Date: April 27, 2021\n//Purpose: This program demonstrates how to output beginning memory addresses\n\n\n*/\n\n/*\nQuestion 2:\n\n//In the following main( ) function, try to find a way to print out the beginning memory address of each variable.\n\n*/"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson",
    "code_files": [
      "Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q1.cpp",
      "Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q2.cpp",
      "Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q3.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q1.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 26, 2021\n//Last Modification Date: April 26, 2021\n//Purpose: This program demonstrates the use of a linked list using a struct and some basic functions\n\n\n*/\n\n/*\nQuestion 1:\n\n//Write a function called listsize that takes a pointer to the start of a linked list and returns the number of elements in the list,  \n//and another function called listsum that also takes a pointer to the start of a linked list and returns the sum of the values of all elements in the list. \n//In your main routine, you need to print out the results of these two functions on computer screen.\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q2.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 26, 2021\n//Last Modification Date: April 26, 2021\n//Purpose: This program demonstrates the use of a linked list using a struct and some basic functions\n\n\n*/\n\n/*\nQuestion 2:\n\n//Write a function called printlist that takes a pointer to the start of a char linked list and prints \n//out all the nodes in the list in sequence. \n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Labs\\Lab 8\\CIS-200-LAB_8-DemetriusJohnson\\Q3.cpp",
        "snippet": "// CIS-200-LAB_8-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n\n/*\n//Author: Demetrius E Johnson\n//Date: April 27, 2021\n//Last Modification Date: April 27, 2021\n//Purpose: This program demonstrates how to output beginning memory addresses\n\n\n*/\n\n/*\nQuestion 2:\n\n//In the following main( ) function, try to find a way to print out the beginning memory address of each variable.\n\n*/"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "myTemplates",
    "code_files": [
      "myTemplates\\Q#_LAB#.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\myTemplates\\Q#_LAB#.cpp",
        "snippet": "// CIS-200-LAB ##INSERT LAB NUMBER HERE## -DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 00 MONTH 2021\n//Last Modification Date: 00-00-2021\n//Purpose: *****\n\n\n*/\n\n/*\nQuestion #:\n\n\n\n*/"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES",
    "code_files": [
      "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\IPhone.cpp",
      "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\IPhone12.cpp",
      "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Phone.cpp",
      "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Q1_Assg1_MAIN.cpp",
      "Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Q2_Assg1_MAIN.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\IPhone.cpp",
        "snippet": "#include \"IPhone.h\"\n\n\n\n//constructors\nIPhone::IPhone() { AppleID = 0; }\n\n//set and get functions\nvoid IPhone::setAppleID(int x) { AppleID = x; }\nint IPhone::getAppleID(void) { return AppleID; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\IPhone12.cpp",
        "snippet": "#include \"IPhone12.h\"\n\n\n//constructor\nIPhone12::IPhone12() { AugmentedRealityStatus = false; }\n\n//set and get functions\nvoid IPhone12::setAugmentedRealityStatus(bool status) { AugmentedRealityStatus = status; }\nbool IPhone12::getAugmentedRealityStatus(void) { return AugmentedRealityStatus; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Phone.cpp",
        "snippet": "#include \"Phone.h\"\n\n\n//constructors\nPhone::Phone() { Age = 0; Price = 0.0; }\nPhone::Phone(int a, float b) { Age = a; Price = b; }\n\n//set and get functions\nvoid Phone::setAge(int a) { Age = a; }\nvoid Phone::setPrice(float b) { Price = b; }\nint Phone::getAge(void) { return Age; }\nfloat Phone::getPrice(void) { return Price; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Q1_Assg1_MAIN.cpp",
        "snippet": "// CIS-200_Assg1-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 12 MAR 2021\n//Last Modification Date: 12-03-2021\n//Purpose: demonstrate the utility of multiple inheritance\n\n\n\n\n\n\n#include <iostream>\n#include \"IPhone12.h\" //this will cause a chain of inlcudes: iphone12 --> includes iphone ---> includes phone.\nusing namespace std;\n\n\nint main()\n{\n    cout << \"---WELCOME to the Mulitple Inheritance Utility Demonstration Program ----By Demetrius Johnson\\n\\n\";"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\assg1_All_Files-Complete_DemetriusJohnson\\MAIN_CPP_H FILES\\Q2_Assg1_MAIN.cpp",
        "snippet": "// CIS-200_Assg1-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 12 MAR 2021\n//Last Modification Date: 12-03-2021\n//Purpose: demonstrate the use of defining a class\n\n\n\n\n\n\n#include <iostream>\n#include <fstream>\nusing namespace std;\n\n\n//Employee class definition\nclass Employee\n{"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson",
    "code_files": [
      "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\IPhone.cpp",
      "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\IPhone12.cpp",
      "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Phone.cpp",
      "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Q1_Assg1_MAIN.cpp",
      "Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Q2_Assg1_MAIN.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\IPhone.cpp",
        "snippet": "#include \"IPhone.h\"\n\n\n\n//constructors\nIPhone::IPhone() { AppleID = 0; }\n\n//set and get functions\nvoid IPhone::setAppleID(int x) { AppleID = x; }\nint IPhone::getAppleID(void) { return AppleID; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\IPhone12.cpp",
        "snippet": "#include \"IPhone12.h\"\n\n\n//constructor\nIPhone12::IPhone12() { AugmentedRealityStatus = false; }\n\n//set and get functions\nvoid IPhone12::setAugmentedRealityStatus(bool status) { AugmentedRealityStatus = status; }\nbool IPhone12::getAugmentedRealityStatus(void) { return AugmentedRealityStatus; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Phone.cpp",
        "snippet": "#include \"Phone.h\"\n\n\n//constructors\nPhone::Phone() { Age = 0; Price = 0.0; }\nPhone::Phone(int a, float b) { Age = a; Price = b; }\n\n//set and get functions\nvoid Phone::setAge(int a) { Age = a; }\nvoid Phone::setPrice(float b) { Price = b; }\nint Phone::getAge(void) { return Age; }\nfloat Phone::getPrice(void) { return Price; }"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Q1_Assg1_MAIN.cpp",
        "snippet": "// CIS-200_Assg1-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 12 MAR 2021\n//Last Modification Date: 12-03-2021\n//Purpose: demonstrate the utility of multiple inheritance\n\n\n\n\n\n\n#include <iostream>\n#include \"IPhone12.h\" //this will cause a chain of inlcudes: iphone12 --> includes iphone ---> includes phone.\nusing namespace std;\n\n\nint main()\n{\n    cout << \"---WELCOME to the Mulitple Inheritance Utility Demonstration Program ----By Demetrius Johnson\\n\\n\";"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 1\\CIS-200_Assg1-DemetriusJohnson\\Q2_Assg1_MAIN.cpp",
        "snippet": "// CIS-200_Assg1-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 12 MAR 2021\n//Last Modification Date: 12-03-2021\n//Purpose: demonstrate the use of defining a class\n\n\n\n\n\n\n#include <iostream>\n#include <fstream>\nusing namespace std;\n\n\n//Employee class definition\nclass Employee\n{"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson",
    "code_files": [
      "Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\CIS-200_Assg2-Q1.cpp",
      "Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\CIS-200_Assg2-Q2.cpp",
      "Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\Complex.cpp",
      "Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\UnsortedList.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\CIS-200_Assg2-Q1.cpp",
        "snippet": "// CIS-200_Assg2-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 04 MAR 2021\n//Last Modification Date: 03-04-2021\n//Purpose:\n\n//Question 1  Unsorted List (30 points)\n\n\n#include <iostream>\n#include \"UnsortedList.h\"\n#include <fstream>\nusing namespace std;\n\n\n//FUNCTION DECLARATIONS\nint numCharElement(ifstream& x);\n//FUNCTION DECLARATIONS"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\CIS-200_Assg2-Q2.cpp",
        "snippet": "// CIS-200_Assg2-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 04 MAR 2021\n//Last Modification Date: 03-04-2021\n//Purpose: write a program using a class that can represent complex numbers\n\n//Question 2  Operator (30 points)\n\n\n\n\n//A complex number is a number of the form: a + b * i,  where a and b are number of type double, and i is a number that represents sqrt(-1). \n\n#include <iostream>\n#include \"Complex.h\"\nusing namespace std;\n\n\n//FUNCTION DECLARATIONS"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\Complex.cpp",
        "snippet": "//Author: Demetrius E Johnson\n//Date: 04 MAR 2021\n//Last Modification Date: 03-04-2021\n//Purpose: write a program using a class that can represent imaginary numbers\n\n#include \"Complex.h\"\n\n//A complex number is a number of the form: a + b * i,  where a and b are number of type double, and i is a number that represents sqrt(-1). \n\n\nComplex::Complex() { real = 0; imaginary = 0; }//Include a default constructor that initializes an object to 0 + 0 * i.\n\nComplex::Complex(double Re, double Im) { real = Re; imaginary = Im; } //Include a constructor with two parameters of type double that can be used to set the member variables of an object to any values\n\nComplex::Complex(double realPart) { real = realPart; imaginary = 0; }//Include a constructor with one parameter of type double called realPart and define the constructor so that the object will be initialized to realPart + 0 * i. \n\nComplex::Complex(const Complex& inputObj) {\n\t\n\tthis->real = inputObj.real; \n\tthis->imaginary = inputObj.imaginary;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 2\\CIS-200_Assg2-DemetriusJohnson\\UnsortedList.cpp",
        "snippet": "#include \"UnsortedList.h\"\n#include <iostream>\n\nUnsortedList::UnsortedList() { length = 0; currentPos = -1; } // default constructor: lenght=0, currentPos=-1\n\nvoid UnsortedList::MakeEmpty() { length = 0; }    // let length=0\n\nvoid UnsortedList::InsertItem(ItemType x){\n\n\tif (length == 10) { std::cout << \"unable to add item; list is full.\\n\\n\"; }\n\telse {\n\t\t\n\t\tvalues[length] = x;\n\t\tlength++;\n\n\t}\n\n\treturn;\n\n}   // insert x into the list"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson",
    "code_files": [
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q1.cpp",
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q2.cpp",
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q3.cpp",
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\sortedlist.cpp",
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\sortedlistdynamicarray.cpp",
      "Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\ulist.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q1.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-22-2021\n//Purpose: implement unsorted linked list\n\n/*\nQuestion 1 (30 points)\n\nGiven the following skeleton of an unsorted list class that uses an unsorted linked list:\n\ntemplate<class ItemType>\nstruct NodeType\n{\n\tItemType item;\n\tNodeType*  next;\n};\n\ntemplate<class ItemType>"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q2.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-27-2021\n//Purpose: this program tests the implementation of an sorted linked list \n\n/*\nQuestion 2 (30 points)\n\nGiven the following skeleton of an unsorted list class that uses an unsorted linked list:\n\ntemplate<class ItemType>\nstruct NodeType\n{\n\tItemType item;\n\tNodeType*  next;\n};\n\ntemplate<class ItemType>"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\CIS-200_Assg3-Q3.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-27-2021\n//Purpose: this program tests the implementation of an sorted linked list \n\n/*\nQuestion 3 (30 points)\nGiven the following skeleton of a sorted list class that uses a sorted dynamic array:\n\n\n#define  LEN 30\n\n\n\n\ntemplate<class ItemType>\n\nclass SortedList_DynArr"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\sortedlist.cpp",
        "snippet": "#include \"sortedlist.h\"\n#include <iostream>\n\n\n\ntemplate<class ItemType>\nSortedList<ItemType>::SortedList() {\n\n\tlistPtr = nullptr;\n\ttop = nullptr;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor\n\ntemplate<class ItemType>\nSortedList<ItemType>::SortedList(const SortedList<ItemType>& x) {"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\sortedlistdynamicarray.cpp",
        "snippet": "#include \"sortedlistdynamicarray.h\"\n#include <iostream>\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(){\n\n\tlistPtr = top;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor: dynamically allocate an array with \"new\" operator\n\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(const SortedList_DynArr& x){\n\n\tlistPtr = top;\n\tlength = x.length; //set lengths equal"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\CIS-200_Assg3-DemetriusJohnson\\ulist.cpp",
        "snippet": "#include \"ulist.h\"\n#include <iostream>\n\n\n\ntemplate<class ItemType>\nUList<ItemType>::UList() {\n\n\tlistPtr = nullptr;\n\ttop = nullptr;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor\n\ntemplate<class ItemType>\nUList<ItemType>::UList(const UList<ItemType>& x) {"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 1 backup txt",
    "code_files": [
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 1 backup txt\\CIS-200_Assg3-Q1.cpp",
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 1 backup txt\\ulist.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 1 backup txt\\CIS-200_Assg3-Q1.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-22-2021\n//Purpose: implement unsorted linked list\n\n/*\nQuestion 1 (30 points)\n\nGiven the following skeleton of an unsorted list class that uses an unsorted linked list:\n\ntemplate<class ItemType>\nstruct NodeType\n{\n\tItemType item;\n\tNodeType*  next;\n};\n\ntemplate<class ItemType>"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 1 backup txt\\ulist.cpp",
        "snippet": "#include \"ulist.h\"\n#include <iostream>\n\n\n\ntemplate<class ItemType>\nUList<ItemType>::UList() {\n\n\tlistPtr = nullptr;\n\ttop = nullptr;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor\n\ntemplate<class ItemType>\nUList<ItemType>::UList(const UList<ItemType>& x) {"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 2 backup txt",
    "code_files": [
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 2 backup txt\\CIS-200_Assg3-Q2.cpp",
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 2 backup txt\\sortedlist.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 2 backup txt\\CIS-200_Assg3-Q2.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-27-2021\n//Purpose: this program tests the implementation of an sorted linked list \n\n/*\nQuestion 2 (30 points)\n\nGiven the following skeleton of an unsorted list class that uses an unsorted linked list:\n\ntemplate<class ItemType>\nstruct NodeType\n{\n\tItemType item;\n\tNodeType*  next;\n};\n\ntemplate<class ItemType>"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 2 backup txt\\sortedlist.cpp",
        "snippet": "#include \"sortedlist.h\"\n#include <iostream>\n\n\n\ntemplate<class ItemType>\nSortedList<ItemType>::SortedList() {\n\n\tlistPtr = nullptr;\n\ttop = nullptr;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor\n\ntemplate<class ItemType>\nSortedList<ItemType>::SortedList(const SortedList<ItemType>& x) {"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt",
    "code_files": [
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\CIS-200_Assg3-Q3.cpp",
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\sortedlistdynamicarray.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\CIS-200_Assg3-Q3.cpp",
        "snippet": "// CIS-200_Assg3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n//Author: Demetrius E Johnson\n//Date: 22 MAR 2021\n//Last Modification Date: 03-27-2021\n//Purpose: this program tests the implementation of an sorted linked list \n\n/*\nQuestion 3 (30 points)\nGiven the following skeleton of a sorted list class that uses a sorted dynamic array:\n\n\n#define  LEN 30\n\n\n\n\ntemplate<class ItemType>\n\nclass SortedList_DynArr"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\sortedlistdynamicarray.cpp",
        "snippet": "#include \"sortedlistdynamicarray.h\"\n#include <iostream>\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(){\n\n\tlistPtr = top;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor: dynamically allocate an array with \"new\" operator\n\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(const SortedList_DynArr& x){\n\n\tlistPtr = top;\n\tlength = x.length; //set lengths equal"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\test code\\sortedlistdynamicarrayBINSEARCH_TESTER.cpp",
        "snippet": "#include \"sortedlistdynamicarray.h\"\n#include <iostream>\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(){\n\n\tlistPtr = top;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor: dynamically allocate an array with \"new\" operator\n\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(const SortedList_DynArr& x){\n\n\t\n\tlength = x.length; //set lengths equal"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\test code",
    "code_files": [
      "Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\test code\\sortedlistdynamicarrayBINSEARCH_TESTER.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 3\\TXT BACKUPS\\assg3 question 3 backup txt\\test code\\sortedlistdynamicarrayBINSEARCH_TESTER.cpp",
        "snippet": "#include \"sortedlistdynamicarray.h\"\n#include <iostream>\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(){\n\n\tlistPtr = top;\n\tlength = 0;\n\tcurrPos = 0;\n\n}  // default constructor: dynamically allocate an array with \"new\" operator\n\n\ntemplate<class ItemType>\nSortedList_DynArr<ItemType>::SortedList_DynArr(const SortedList_DynArr& x){\n\n\t\n\tlength = x.length; //set lengths equal"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson",
    "code_files": [
      "Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\CIS-200_Assg4-Q1.cpp",
      "Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\CIS-200_Assg4-Q2.cpp",
      "Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\queueADT.cpp",
      "Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\stackADT.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\CIS-200_Assg4-Q1.cpp",
        "snippet": "// CIS-200-_Assg4-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 08-04-2021\n//Purpose: Implement a template class that demonstrates stack implementation\n\n\n*/\n\n/*\nQuestion 1:\n\n\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\CIS-200_Assg4-Q2.cpp",
        "snippet": "// CIS-200-_Assg4-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date:  04-09-2021\n//Purpose: Implement a template class that demonstrates queue implementation\n\n*/\n\n/*\nQuestion 1:\n\n\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\queueADT.cpp",
        "snippet": "//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 04-09-2021\n//Purpose: Implement a template class that demonstrates queue implementation\n\n\n#include \"queueADT.h\"\n#include <iostream>\n\n\ntemplate<typename ItemType>\nqueueADT<ItemType>::queueADT(){\n\n\tfront = nullptr;\n\trear = nullptr;\n\tlength = 0;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\CIS-200_Assg4-DemetriusJohnson\\stackADT.cpp",
        "snippet": "//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 08-04-2021\n//Purpose: Implement a template class that demonstrates stack implementation\n\n\n#include \"stackADT.h\"\n\n/*  */\n\ntemplate<typename ItemType>\nstackADT<ItemType>::stackADT(){\n\n\ttopPtr = nullptr;\n\tlength = 0;\n\n}  // default constructor: stackADT is created and empty\n\ntemplate<typename ItemType>"
      }
    ]
  },
  {
    "repo": "CIS-200_RETAKE_WITH_JIE_SHIEN",
    "folder": "Programming Assignments\\assg 4\\TXT BAKCUPS",
    "code_files": [
      "Programming Assignments\\assg 4\\TXT BAKCUPS\\CIS-200_Assg4-Q1.cpp",
      "Programming Assignments\\assg 4\\TXT BAKCUPS\\CIS-200_Assg4-Q2.cpp",
      "Programming Assignments\\assg 4\\TXT BAKCUPS\\queueADT.cpp",
      "Programming Assignments\\assg 4\\TXT BAKCUPS\\stackADT.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\TXT BAKCUPS\\CIS-200_Assg4-Q1.cpp",
        "snippet": "// CIS-200-_Assg4-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 08-04-2021\n//Purpose: Implement a template class that demonstrates stack implementation\n\n\n*/\n\n/*\nQuestion 1:\n\n\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\TXT BAKCUPS\\CIS-200_Assg4-Q2.cpp",
        "snippet": "// CIS-200-_Assg4-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date:  04-09-2021\n//Purpose: Implement a template class that demonstrates queue implementation\n\n*/\n\n/*\nQuestion 1:\n\n\n\n*/"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\TXT BAKCUPS\\queueADT.cpp",
        "snippet": "//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 04-09-2021\n//Purpose: Implement a template class that demonstrates queue implementation\n\n\n#include \"queueADT.h\"\n#include <iostream>\n\n\ntemplate<typename ItemType>\nqueueADT<ItemType>::queueADT(){\n\n\tfront = nullptr;\n\trear = nullptr;\n\tlength = 0;"
      },
      {
        "file": "CIS-200_RETAKE_WITH_JIE_SHIEN\\Programming Assignments\\assg 4\\TXT BAKCUPS\\stackADT.cpp",
        "snippet": "//Author: Demetrius E Johnson\n//Date: 08 April 2021\n//Last Modification Date: 08-04-2021\n//Purpose: Implement a template class that demonstrates stack implementation\n\n\n#include \"stackADT.h\"\n\n/*  */\n\ntemplate<typename ItemType>\nstackADT<ItemType>::stackADT(){\n\n\ttopPtr = nullptr;\n\tlength = 0;\n\n}  // default constructor: stackADT is created and empty\n\ntemplate<typename ItemType>"
      }
    ]
  }
]