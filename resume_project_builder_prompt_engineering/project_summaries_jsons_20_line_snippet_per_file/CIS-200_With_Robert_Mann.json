[
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "class notes and resources",
    "code_files": [
      "class notes and resources\\Idiot Proofing Functions.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\class notes and resources\\Idiot Proofing Functions.cpp",
        "snippet": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\n/***************************************\n\t\t  FUNCTION PROTOTYPES\n****************************************/\n\nint getInt( string message = \"Please enter an integer: \");\nbool getInt(int& userVal, const int maxAttempts,  string message = \"Please enter an integer: \");\nint getInt(bool minOrMax, int minMaxVal, string message = \"Please input an integer in range: \");\nint getInt(bool inside, int minVal, int maxVal, string message = \"Please input an integer for range: \");\nbool getInt(bool minOrMax, int minMaxVal, int & userVal, int maxAttempts, string message = \"Please input an integer for range : \");\nbool getInt(bool inside, int minVal, int maxVal, int& userVal, int maxAttempts, string message = \"Please input an integer for range : \");\n\n\nlong getLong(string message = \"Please enter a long: \");\nbool getLong(long & userVal, const int maxAttempts, string message = \"Please enter a long: \");\nlong getLong(bool minOrMax, long minMaxVal, string message = \"Please input a long in range: \");"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 1\\JohnsonDemetriusLab01",
    "code_files": [
      "labs\\CIS 200 LAB 1\\JohnsonDemetriusLab01\\JohnsonDemetriusLab01-MAIN.cpp",
      "labs\\CIS 200 LAB 1\\JohnsonDemetriusLab01\\student.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 1\\JohnsonDemetriusLab01\\JohnsonDemetriusLab01-MAIN.cpp",
        "snippet": "/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 13 Sept 2020\n\t*Modification Date: 13 Sept 2020\n\t*Purpose: review CIS 150 by using files, pass by reference, constructors, and destructors\n\n\t// LAB 1 - CIS 200\n\n\tQuestion 1\n\t-------------------------\n\tProgram:\n\nUse separate source files and header files to create a class to represent students.\na.\tA student object has attributes of major (string) and credit hours taken (integer).  \nb.\tMember functions (methods) are as follows (no additional ones may be created):\ni.\tUsing a constructor initializer list, create a constructor with default parameter values of General Studies and -1, and that displays \\n\\tConstructor called for major <major> and hours <hours>\\n, replacing <major> and <hours> with attribute values.\nii.\tindividual const get methods (in-line definition) for each attribute\niii.\ta const get method (NOT in-line) that uses pass-by-reference for both parameters and has return-type void\niv.\tone set method (NOT in-line) that sets both attributes\nv.\tPrintMe method (NOT in-line) that returns string Im a <major> major and have completed <x> credit hours., replacing <major> and <x> with the appropriate attribute values"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 1\\JohnsonDemetriusLab01\\student.cpp",
        "snippet": "#include \"student.h\"\n\n\n\n\n//constructor initializer list\nstudent::student(string userInputMajor, int userInputCredits):major(userInputMajor), creditHrsCompleted(userInputCredits) { \n\n\tcout << \"\\n\\t***Constructor called for major '\" << major << \"' and hours \" << creditHrsCompleted << \".***\\n\"; //this will show in the program how subobjects are created when the constructor is called\n\n}\n\nstudent::~student() {\n\tcout << \"\\n***destrcutor has been called, object and all subobjects destroyed; memory reallocated successfully.***\\n\";\n\tsystem (\"pause\"); //put in a system pause so that we can see destructor message easily\n}"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 10\\LAB 10 CIS 200",
    "code_files": [
      "labs\\CIS 200 LAB 10\\LAB 10 CIS 200\\LAB 10 CIS 200.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 10\\LAB 10 CIS 200\\LAB 10 CIS 200.cpp",
        "snippet": "// LAB 10 CIS 200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include <iostream>\n\nint main()\n{\n    std::cout << \"Hello World!\\n\";\n}\n\n// Run program: Ctrl + F5 or Debug > Start Without Debugging menu\n// Debug program: F5 or Debug > Start Debugging menu\n\n// Tips for Getting Started: \n//   1. Use the Solution Explorer window to add/manage files\n//   2. Use the Team Explorer window to connect to source control\n//   3. Use the Output window to see build output and other messages\n//   4. Use the Error List window to view errors\n//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project\n//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson",
    "code_files": [
      "labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q1_CIS-200-LAB2-DemetriusJohnson.cpp",
      "labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q2_CIS-200-LAB2-DemetriusJohnson.cpp",
      "labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q3_CIS-200-LAB2-DemetriusJohnson.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q1_CIS-200-LAB2-DemetriusJohnson.cpp",
        "snippet": "/*  *Author: Demetrius Johnson\n\t*Creation Date: 20 Sept. 2020\n\t*Modification Date: 22 Sept. 2020\n\t*Purpose: *****\n\n\tQuestion 1:\n\n\tUse the following code snippet as the basis for a program to test all possible combinations of pointer manipulation.\n\tEach of the 10 combinations must be tested separately since the pointer may move and array values may be changed:\n\n\tint X[] = { 3, 7, 11, 17, 23 };\n\tint * xPtr = & X[2];\n\tcout << X[1] << ' ' << X[2] << ' ' << X[3] << ' ' << xPtr << \" : \" << *xPtr << endl;\n\n\tcout << \"Array content prior to pointer manipulation\\n\";\n\t// replace AAA in the following statement with selection from list of 10 pointer actions below, one at a time\n\tcout << AAA << endl;\n\tcout << endl << \"Array content after ptr manipulation\" << endl;\n\tcout << X[1] << ' ' << X[2] << ' ' << X[3] << ' ' << xPtr << \" : \" << *xPtr << endl;"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q2_CIS-200-LAB2-DemetriusJohnson.cpp",
        "snippet": "/*  *Author: Demetrius Johnson\n\t*Creation Date: 20 Sept. 2020\n\t*Modification Date: 23 Sept. 2020\n\t*Purpose: Learn how pointer and arrays work and how to take advantage of offsetting them\n\n\tQuestion 2:\n\n\tCreate an array of 100 integers, randomly generated to be in the range of -50 to +72.  \n\t1.\tUsing standard array notation, print all values in the array on one line, separated by a space\n\t2.\tUsing array offset notation, print all values in the arrayfrom last index to first, on one line, each separated by a space\n\t3.\tUsing pointer notation, print all negative values on one line, separated by a space\n\t4.\tUsing pointer offset notation, print all positive values on one line, separated by a space\n\n\tReminder:\n\tarray notation\t\tmyArray[ x ];\n\tarray offset notation\t*(myArray + x);\n\tpointer notation\t* integerArrayPtr;\n\tpointer offset notation\t*(integerArrayPtr + x);"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 2\\CIS-200-LAB2-DemetriusJohnson\\Q3_CIS-200-LAB2-DemetriusJohnson.cpp",
        "snippet": "/*  *Author: Demetrius Johnson\n\t*Creation Date: 20 Sept. 2020\n\t*Modification Date: 20 Sept. 2020\n\t*Purpose: *****\n\n\tQuestion 3:\n\n\tStarting with the shortest possible C++ program, \n\thave it display to the console the name of the executable \n\tthat is running and how many arguments it has.\n\n\t\n*/\n\n \n//NOTE: by defualt, the main function has defualt member functions that includes:\n// 1) the number of arguments, and \n// 2)a pointer to an array of character strings that contain the arguments, one per string. The value argv[argc] is a null pointer."
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson",
    "code_files": [
      "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\CIS-200-DemetriusJohnson_Lab3Q2_MAIN.cpp",
      "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\CIS-200-LAB3-DemetriusJohnson_Q1.cpp",
      "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\ColorClass.cpp",
      "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\HeightClass.cpp",
      "labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\LengthWidthClass.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\CIS-200-DemetriusJohnson_Lab3Q2_MAIN.cpp",
        "snippet": "/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 29 Sept. 2020\n\t*Modification Date: 7 Oct. 2020\n\t*Purpose: Main function for testing and using inhertiance using 3 classes\n*/\n\n\n#include <iostream>\n#include <string>\n#include \"HeightClass.h\"\n\nusing namespace std;\n\nvoid testFunction(HeightClass HC);\n\n\nint main(){\n\n\tColorClass C1;"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\CIS-200-LAB3-DemetriusJohnson_Q1.cpp",
        "snippet": "/*\n    *Author: Demetrius Johnson\n    *Creation Date: 29 Sept. 2020\n    *Modification Date: 7 Oct. 2020\n    *Purpose: Practice using the VIS STUD debugger\n*/\n\n// CIS-200-LAB3-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nclass Data\n{\npublic:\n    Data()\n    {\n        _values.push_back(1);"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\ColorClass.cpp",
        "snippet": "/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 29 Sept. 2020\n\t*Modification Date: 7 Oct. 2020\n\t*Purpose: Base class\n*/\n\n\n/*\n1st class: has one private attribute, color, which is a string, and another which is a pointer to an int. One constructor, \nwith a string parameter with default value Purple. The constructor will create a new int and assign it to the pointer variable, \nthen give it value    -13. The constructor displays message Class created with color ccc, replacing ccc with the color variable. \nDestructor, which displays message Class destroyed with color ccc and number nnn, \nreplacing ccc with the color variable and nnn with the value the pointer points to, and deleting the pointer.  \nAlso create appropriate get and set methods for color.  Youll have to write a copy constructor for the class as well as overloading operator=.  \nHave the copy constructor increase the value the new pointer points to by 1 (only the copy will increase, not the original) and display message Class created with color ccc and number nnn, \nreplacing ccc with the color variable and nnn with the value the pointer points to.\n\n*/\n#include <iostream>"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\HeightClass.cpp",
        "snippet": "/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 29 Sept. 2020\n\t*Modification Date: 7 Oct. 2020\n\t*Purpose: level 3 class to use for inheritance\n*/\n\n\n/*\n\n\n3rd class: \n\ninherits public from 2nd class. It has private int attribute of height. \nOne constructor, with an int parameter with default value of 2.  \nThe constructor displays message Class created with color ccc, \nlength lll, width www, and height hhh, replacing ccc, lll, www, \nand hhh with the appropriate variable values. Destructor, \nwhich displays message Class destroyed with color ccc, length lll, \nwidth www, and height hhh, replacing ccc, lll, www, and hhh with the appropriate variable values."
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 3\\CIS-200-LAB3-DemetriusJohnson\\LengthWidthClass.cpp",
        "snippet": "/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 29 Sept. 2020\n\t*Modification Date: 7 Oct. 2020\n\t*Purpose: level 3 class to use for inheritance\n*/\n\n/*\n\n2nd class: \ninherits public from 1st class.  \nIt has private attributes of length and width, both int. One constructor, with int parameters with default values of 3 and 5. \nThe constructor displays message Class created with color ccc, length lll, and width www, replacing ccc, lll, \nand www with the appropriate variable values. Destructor, which displays message Class destroyed with color ccc, length lll, and width www, \nreplacing ccc, lll, and www with the appropriate variable values.  \nCreate appropriate get and set methods for the two attributes. \nCreate a PrintMe method that prints ccc object with lll x www (area = aaa) replacing ccc, lll, \nand www with the appropriate variable values and aaa with length multiplied by width."
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200",
    "code_files": [
      "labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\hello.cpp",
      "labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Question1_DEMETRIUS JOHNSON --LAB 4 CIS 200.cpp",
      "labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Question2_DEMETRIUS JOHNSON --LAB 4 CIS 200.cpp",
      "labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Vector.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\hello.cpp",
        "snippet": "//Demetrius Johnson hello.cpp  13 Oct 2020\n//basic cout << \"hello world\" program for LAB 5 CIS 200 ASSIGNMENT\n\n\n#include <iostream>\n\nusing namespace std;\n\n\nint main() {\n\n\tcout << \"\\n\\nhello world\\n\\n\";\n\n\treturn 0;\n}"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Question1_DEMETRIUS JOHNSON --LAB 4 CIS 200.cpp",
        "snippet": "//\n\n/*\n\n/*\n\t*Author: Demetrius Johnson\n\t*Creation Date: 12 Oct 2020\n\t*Modification Date: 12 Oct 2020\n\t*Purpose: override Vector function and practice writing a copy constructor using deep copy\n\n*/\n\n//Write methods defined in header fileand use the following stub Main to test header file\n\n#include \"Vector.h\"\n#include <iostream>\n\nusing namespace std;\n\nint main()"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Question2_DEMETRIUS JOHNSON --LAB 4 CIS 200.cpp",
        "snippet": "/*\n////Program 2.\n\n\n\t*Author: Demetrius Johnson\n\t*Creation Date: 12 Oct 2020\n\t*Modification Date: 12 Oct 2020\n\t*Purpose: write a recursive function to calculate the the sqr root of a number using series approximation\n\n\n\nWrite a function to calculate the square root of a float number with the following interface :\n\n\tdouble squareRoot(double x)\n{\n\t// assert that x is not negative\n\t...\n\n}"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 4\\DEMETRIUS JOHNSON --LAB 4 CIS 200\\Vector.cpp",
        "snippet": "//Header File Definition  override C++ vector definition\n\n#include \"Vector.h\"\n\n    Vector::Vector() {\n    \n        size = 0;\n        entries = new int[size];\n    \n    \n    }         \t\t// default constructor\n\n\n    Vector::Vector(int s) {\n\n        size = s;\n        entries = new int[size];\n        for (int count = (size-1); count >= 0; count--) { //use for loop in order to set all elements equal to 0\n\n            entries[count] = 0;"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 5",
    "code_files": [
      "labs\\CIS 200 LAB 5\\hello.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 5\\hello.cpp",
        "snippet": "//Demetrius Johnson hello.cpp  13 Oct 2020\n//basic cout << \"hello world\" program for LAB 5 CIS 200 ASSIGNMENT\n\n\n#include <iostream>\n\nusing namespace std;\n\n\nint main() {\n\n\tcout << \"\\n\\nhello world\\n\\n\";\n\n\treturn 0;\n}"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200",
    "code_files": [
      "labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\Lab6_CIS-200_Program1_MAIN.cpp",
      "labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\Lab6_CIS-200_Program2_MAIN.cpp",
      "labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\P1functions.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\Lab6_CIS-200_Program1_MAIN.cpp",
        "snippet": "// DemetriusJohnson-Lab6_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n\n\t*Author: Demetrius Johnson\n\t*Creation Date: 20 Oct 2020\n\t*Modification Date: 20 Oct 2020\n\t*Purpose:  *******\n\n\nProgram 1\n\nGiven that arrayIntValues [MAX_ROWS][MAX_COLUMNS] is a 2 dimensional array of positive integers, \nwrite a C++ function howManyEven to find the total number of even elements in the array. \nIt should have input parameter array arrayIntValues. The function should return an integer. \nAlso create a C++ function called printArray, with the input parameter array arrayIntValues, \nto print out the elements in the array (be sure to have row and column labels and proper formatting (i.e. column values line up). \nMain must be in one source file and all other functions in a second source file.\nThe constants MAX_ROWS and MAX_COLUMNS must be accessed globally by defining the following global variables:"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\Lab6_CIS-200_Program2_MAIN.cpp",
        "snippet": "// DemetriusJohnson-Lab6_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n\n\t*Author: Demetrius Johnson\n\t*Creation Date: 20 Oct 2020\n\t*Modification Date: 20 Oct 2020\n\t*Purpose:  *******\n\n\nProgram 2\n\nGiven storeMonthlySales[NUM_STORES][NUM_MONTHS][NUM_DEPTS] is a three-dimensional array of floating point values.\nWrite a C++ function, printMonthlySales, to calculate and print the total value of sales during a specific month by \neach department and in each store plus totals by store and department and overall sales.\nThe return type of the function is void and the function must have 2 input parameters: Sales array and the month the user specified (edit for correct month values!).  \nThe constants NUM_STORES, NUM_MONTHS, and NUM_DEPTS must be accessed globally by defining the following global variables:\n\n#define NUM_DEPTS  2    \tor const in NUM_DEPTS = 2;"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 6\\DemetriusJohnson-Lab6_CIS-200\\P1functions.cpp",
        "snippet": "#include \"P1functions.h\"\n\n\nvoid openingMenu(void) {\n\t\n\tcout << \"-------------------------------WELCOME-----------------------------------\\n\\n\";\n\tcout << \"This program reads the number of Positive values that a user enters for a 2D array.\\n\";\n\tcout << \"Total number of input values accepted from user is 3x2 = 6 values; values may only be POSITIVE.\\n\\n\";\n\tcout << \"The array is of size 3x2(3 rows, 2 columns in each row),\\nand input gathers all columns of a row before moving to next row's input.\\n\\n\";\n\tcout << \"In addition, the program will output a display table of the current user 2D array.\\n\\n\";\n\tcout << \"As an example, the default 2D array in this program is:\\n\\nint arrayIntValues[MAX_ROWS][MAX_COLUMNS] = { {3 , 2}, {4, 5}, {2, 2} }\\n\";\n\tcout << \"The total number of positive even numbers in the array is:\\n\\n\";\n\n\n}\n\nint numPosAndEven_InArray(int arrayIntValues[ROWS][COLUMNS]) {"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200",
    "code_files": [
      "labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\DemetriusJohnson-Lab7_CIS-200_Program1.cpp",
      "labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\DemetriusJohnson-Lab7_CIS-200_Program2.cpp",
      "labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\Lab7P1functions.cpp",
      "labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\Lab7P2functions.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\DemetriusJohnson-Lab7_CIS-200_Program1.cpp",
        "snippet": "// DemetriusJohnson-Lab7_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n\n\n*\t*Author: Demetrius Johnson\n\t*Creation Date: 26 Oct 2020\n\t*Modification Date: 26 Oct 2020\n\t*Purpose:  *******\n \n\nProgram 1:\n\nYou are to create a recursive function to perform a linear search through an array. -->(search every element in the array until a matching value (key) is found)\n\nHow Program Works\n\no\tProgram has array size of 5000\no\tLoad values into the array, equal to its index value. Index 5 has value 5, index 123 has value 123."
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\DemetriusJohnson-Lab7_CIS-200_Program2.cpp",
        "snippet": "// DemetriusJohnson-Lab7_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n\n\n*\t*Author: Demetrius Johnson\n\t*Creation Date: 26 Oct 2020\n\t*Modification Date: 26 Oct 2020\n\t*Purpose:  *******\n\n\nProgram 2:\n\nYou are to create a recursive function to perform a factorial calculation.\n\no\tint factorial(const int value)\no\treturn -1 if any negative number passed into the function\no\tCalculate the factorial of the number entered by the user"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\Lab7P1functions.cpp",
        "snippet": "/*\n* Author: Demetrius Johnson\n* Creation Date : 26 Oct 2020\n* Modification Date : 26 Oct 2020\n* Purpose : .cpp file for program 1 (lab 7) functions\n*/\n\n#include \"Lab7P1functions.h\"\n\n\n\nvoid main_Menu(const int & arraySize) {\n\n\tcout << \"---------------------------------------------WELCOME-------------------------------------------\\n\";\n\tcout << \"This Program will perform a linear search through an array of size \" << arraySize<< \" for a given key (integer) provided by the user.\\n\";\n\tcout << \"\\nEnter an integer value to see if your key value is contained in one of the elements of the array: \";\n\t\n}"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 7\\DemetriusJohnson-Lab7_CIS-200\\Lab7P2functions.cpp",
        "snippet": "/*\n* Author: Demetrius Johnson\n* Creation Date : 26 Oct 2020\n* Modification Date : 26 Oct 2020\n* Purpose : .cpp file for program 2 (lab 7) functions\n*/\n\n#include \"Lab7P2functions.h\"\n\n\n\nvoid main_Menu() {\n\n\tcout << \"---------------------------------------------WELCOME-------------------------------------------\\n\";\n\tcout << \"This Program will calculate the value of an integer factorial provided by the user (userIntger! = ....)\\n\";\n\tcout << \"Enter an integer value to be calculated (warning, too large a value will cause stack overflow): \";\n\t\n}\n\nint IntFactorialCalc(const int userValue) {"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "labs\\CIS 200 LAB 8\\LAB 8 CIS 200",
    "code_files": [
      "labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\creditFileRandW.cpp",
      "labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\L8functions.cpp",
      "labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\LAB 8 CIS 200.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\creditFileRandW.cpp",
        "snippet": "#include \"creditFileRandW.h\"\n\n\nvoid creditFileRandW::openCreditFile_read(void) {\n\tcreditFile_read.open(\"credit.dat\", ios::in | ios::binary);\n\tif (!creditFile_read.is_open()) {\n\t\tcout << \"\\nunable to open 'credit.dat' file.\\n\";\n\t}\n\telse { cout << \"\\n~Random Access File 'credit.dat' opened successfully~\\n\"; }\n\n}\n\nvoid creditFileRandW::openCreditFile_write(void) {\n\n\tcreditFile_write.open(\"credit.dat\", ios::out | ios::binary);  //NOTE:if no file exists, you may not be able to open in binary or using any other addtional modes \n\t\t\t\t\t\t\t\t\t\t\t\t //must open the uncreated file first using only the default constructor (no additional paramters other than ios::out and the file name),\n\t\t\t\t\t\t\t\t\t\t\t\t // then close it and reopen (in binary for example) the newly created file. (idk if this is because of a c++ error but it worked as long as i didnt set the int mode (the last parameter)\n\tif (!creditFile_write.is_open()) {\n\t\tcout << \"\\nunable to open 'credit.dat' file.\\n\";\n\t}"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\L8functions.cpp",
        "snippet": "// DemetriusJohnson-Lab8_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n\n/*\n\nGiven:\nstruct clientData {\n   int accountNumber;\n   char lastName[ 16 ];\t\t// c-style string, not string\n   char firstName[ 11 ];\n   float balance;\n};\n\nCreate a random access file of 101 records named credit.dat using these code segments in a function to initialize the file to empty records:\nofstream creditFile( \"credit.dat\", ios::out);\nclientData blankClient = { 0, \"\", \"\", 0.0 };\n\nfor ( int i = 0; i <= 100; i++ )\n   creditFile.write( reinterpret_cast<const char *>( &blankClient ), sizeof( clientData ) );"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\labs\\CIS 200 LAB 8\\LAB 8 CIS 200\\LAB 8 CIS 200.cpp",
        "snippet": "// DemetriusJohnson-Lab8_CIS-200.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n\n/*\n\nGiven:\nstruct clientData {\n   int accountNumber;\n   char lastName[ 16 ];\t\t// c-style string, not string\n   char firstName[ 11 ];\n   float balance;\n};\n\nCreate a random access file of 101 records named credit.dat using these code segments in a function to initialize the file to empty records:\nofstream creditFile( \"credit.dat\", ios::out);\nclientData blankClient = { 0, \"\", \"\", 0.0 };\n\nfor ( int i = 0; i <= 100; i++ )\n   creditFile.write( reinterpret_cast<const char *>( &blankClient ), sizeof( clientData ) );"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson",
    "code_files": [
      "projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\AnotherEuclideanAlgTest.cpp",
      "projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\log_2(X)_Algorithm.cpp",
      "projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\mainTest _EuclideanAlgorithm.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\AnotherEuclideanAlgTest.cpp",
        "snippet": "// TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nint function_Euclidean(int a, int b)\n{\n\tint holder = 0;\n\n\tif (a < b) {\n\n\t\tholder = a;\n\t\ta = b;\n\t\tb = holder;\n\t}\n\twhile (b != 0) {\n\t\n\t\tholder = a % b;"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\log_2(X)_Algorithm.cpp",
        "snippet": "// TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nvoid function(int n)\n{\n\tint j_counter = 0;\n\tint i_counter = 0;\n\tcout << \"\\nn = \" << n << endl;\n\tcout << \"i-j\\n\";\n\tfor (int i = n; i > 0; i/= 2) {\n\t\t\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\t//loop body\n\t\t\tcout << i << \"-\" << j;\n\t\t\t//cout << j;\n\t\t\tprintf(\"  j-loop-iteration\\n\");"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\AlgorithmAnalysisTestProject\\TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson\\mainTest _EuclideanAlgorithm.cpp",
        "snippet": "// TestingAndTimeComplexityAlgorithmAnalysis_DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nvoid function(int n)\n{\n\tint j_counter = 0;\n\tcout << \"\\nn = \" << n << endl;\n\tcout << \"i-j\\n\";\n\tfor (int i = 0; i <= n - 1; i++) {\n\t\t\n\t\tfor (int j = (i + 1); j <= (n - 1); j++) {\n\t\t\t//loop body\n\t\t\tcout << i << \"-\" << j;\n\t\t\t//cout << j;\n\t\t\tprintf(\"  j-loop-iteration\\n\");\n\t\t\tj_counter++;"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "projects\\CIS 200 SoloProject\\CIS-200-Project1-soloPRJ-DemetriusJohnson",
    "code_files": [
      "projects\\CIS 200 SoloProject\\CIS-200-Project1-soloPRJ-DemetriusJohnson\\CIS-200-Project1-soloPRJ_main.cpp",
      "projects\\CIS 200 SoloProject\\CIS-200-Project1-soloPRJ-DemetriusJohnson\\myString.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 SoloProject\\CIS-200-Project1-soloPRJ-DemetriusJohnson\\CIS-200-Project1-soloPRJ_main.cpp",
        "snippet": "// CIS-200-Project1-soloPRJ-DemetriusJohnson.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n/*\n* Author: Demetrius Johnson  --CIS200 UM-DEARBORN --PROF ROBERTMANN\n* Creation Date : 26 Oct 2020\n* Modification Date : 31 Oct 2020\n* Purpose : ***\n*/\n\n#include <iostream>\n#include \"myString.h\"\n\nusing namespace std;\n\nint main()\n{\n //TESTING//\n\n\tcout << \"///TEST 1: \\n\";"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 SoloProject\\CIS-200-Project1-soloPRJ-DemetriusJohnson\\myString.cpp",
        "snippet": "/*\n* Author: Demetrius Johnson  --CIS200 UM-DEARBORN --PROF ROBERTMANN\n* Creation Date : 26 Oct 2020\n* Modification Date : 31 Oct 2020\n* Purpose : ***\n*/\n\n\n\n#include \"myString.h\"\n\n\n//-------------RULE OF 3-----------------COPY CONSTRUCTOR, DESTRUCTOR, COPY ASSG OPERATOR-------THE BIG 3-----------------//\n\nmyString::~myString(){\n\n\tdelete[] dynamicArrayOfChar;\n\tcout << \"\\n\\t\\t~myString destructor has been called...array char[] deleted....destroying object~\\n\";"
      }
    ]
  },
  {
    "repo": "CIS-200_With_Robert_Mann",
    "folder": "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ",
    "code_files": [
      "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CIS_200_TEAM14_PRJ_MAIN.cpp",
      "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CPU.cpp",
      "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CPU_Controller.cpp",
      "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\JobType_ABC.cpp",
      "projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\ReadFromFile.cpp"
    ],
    "snippets": [
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CIS_200_TEAM14_PRJ_MAIN.cpp",
        "snippet": "// CIS_200_TEAM14_PRJ.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//Demetrius Johnson \n//Jingzhou Fang\n\n//special note: We will use vectors for this project; even though a linked list is better to use when you have to delete elements from the container at the front of the list (element 0);\n//however, our vector will remain relatively small and so it will have an affect on the Big 0 time complexity (number of executions) of our project, but not enough in our judgement to use a linked list; we will use the ease of std vector class\n//In the future, we could easily revamp this program and replace any vectors and all vector functionality with a more efficient linked list\n\n//Another note: if any jobs in arrivalQueue match the clock they will move to a CPU to be processed --> if no CPU is available they will move into the jobQueue\n\n/*\n\nPrimary Logic (Clock Manager):\n\n  1) Check data file for any arrival times that match the clock and add it to the ArrivalQ vector\n\n  2) Flush the arrivalQueue vector --> send all jobs from arrival Queue to the CPU Vector to be processed (or to the CPU(s) with the smallest JobQ)\n\n  3) Run all processors"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CPU.cpp",
        "snippet": "//CPU CLASS HEADER FILE\n\n#include \"CPU.h\"\n\n\nvoid CPU::process_Job(void){ //special note: remember to use the private data members -- don't use set and get methods within the class since it is easier for the program to access the class members rather than call another function\n\n\n\tif (CPU_status_isEmpty == true && CPU_jobQ_status_isEmpty == true && currentJob.jobType == nullchar) { // CPU is idle; so increment idle clock and total idle time\n\n\t\tclock_CPU_IDLE++;\n\t\ttotalIdleTime++;\n\t\treturn; //exit function --> no need to check below statements and waste execution time since there is nothing on the processor or in the job queue\n\t}\n\tif(CPU_status_isEmpty == true && CPU_jobQ_status_isEmpty == false && currentJob.jobType == nullchar){ //enter this statement if the CPU is currently processing nothing --> get a new job and place it on processor from job q\n\t\n\t\tcurrentJob = CPUjobQueue_vector.at(CPUjobQueue_vector.size() - 1); //get the last element from the vector since we set the add_to_jobq function to add the newest arrivals to the front of the vector //-1 since size of vector included 0\n\t\tCPUjobQueue_vector.pop_back(); //delete job from the queue\n\t\tcurrentJobQueue_size--; //decrement job q size since we've added one to the CPU for processing"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\CPU_Controller.cpp",
        "snippet": "//CPU_Controller class CPP file\n\n#include \"CPU_Controller.h\"\n\n\n\n\nint CPU_Controller::findSmallest_CPUjobQueue(vector<CPU>& CPU_Vec) { //will use a 1-time binary split search to find smallest value //if program runs too slow we can easily add more binary splits\n\t//use this function to return the element (CPU number) with the smallest job Queue, while also setting the last_recordedSmallest Job queue data member equal to the smallest value to keep track and use in other functions\n\t\n\tint lowerElements_searchRange = 0; //use this to search the lower half of the vector during binary search\n\tint upperElements_searchRange = 0; //use this int to search the upper half of the vector during binary search\n\t\n\t//in the below 2 stamenets we will do a binary split and then proceed to search for the lowest value in each half of the CPU vector seprately \n\n\tlowerElements_searchRange = CPUsize / 2; //lower range is the 1st half of the CPUs in the CPU vector\n\tupperElements_searchRange = CPUsize - lowerElements_searchRange; //upper range is the last half of the CPUs in the CPU vector --> CPUsize - lowerRange == start of 2nd half of the CPU vector"
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\JobType_ABC.cpp",
        "snippet": "#include \"JobType_ABC.h\""
      },
      {
        "file": "CIS-200_With_Robert_Mann\\projects\\CIS 200 TeamProject\\CIS_200_TEAM14_PRJ\\ReadFromFile.cpp",
        "snippet": "//READ FROM FILE class CPP FILE\n#include \"ReadFromFile.h\"\n#include <vector>\nusing namespace std;\n\n\n//\n//Job Type\t\tArrival Time\t\tProcessing Time\n//   A\t\t\t\t5 + / -1\t\t\t\t3 + / -2\n//   B\t\t\t\t10 + / -1\t\t\t\t8 + / -2\n//   C\t\t\t\t25 + / -1\t\t\t\t11 + / -2\n//Note: \n//5 +/- 1 is 4, 5, 6 --> 4 + rand() % 3\n//Arrival Time is time since the last job of the same Type"
      }
    ]
  }
]